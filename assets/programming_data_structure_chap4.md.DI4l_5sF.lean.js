import{_ as r,C as o,c as d,o as p,ae as t,j as a,G as e,a as i,w as n}from"./chunks/framework.U1Gow_7P.js";const S=JSON.parse('{"title":"第四章 串","description":"","frontmatter":{},"headers":[],"relativePath":"programming/data_structure/chap4.md","filePath":"programming/data_structure/chap4.md"}'),u={name:"programming/data_structure/chap4.md"},b={id:"基本操作",tabindex:"-1"},m={id:"定长顺序存储",tabindex:"-1"},_={id:"堆分配存储",tabindex:"-1"},v={id:"块链存储",tabindex:"-1"},g={id:"模式匹配算法",tabindex:"-1"},h={id:"kmp算法",tabindex:"-1"},T={id:"kmp算法进一步改进",tabindex:"-1"};function f(C,l,k,P,A,x){const s=o("font");return p(),d("div",null,[l[40]||(l[40]=t("",3)),a("ul",null,[a("li",null,[e(s,{color:"#75C940"},{default:n(()=>l[0]||(l[0]=[i("零个",-1)])),_:1,__:[0]}),l[3]||(l[3]=i(" 或 ",-1)),e(s,{color:"#75C940"},{default:n(()=>l[1]||(l[1]=[i("多个",-1)])),_:1,__:[1]}),l[4]||(l[4]=i(" 字符构成的 ",-1)),e(s,{color:"#75C940"},{default:n(()=>l[2]||(l[2]=[i("有限",-1)])),_:1,__:[2]}),l[5]||(l[5]=i(" 序列",-1))]),l[9]||(l[9]=a("li",null,"串长：串中字符个数",-1)),l[10]||(l[10]=a("li",null,"空串：串长为0",-1)),a("li",null,[l[7]||(l[7]=i("子串：串中任意多个 ",-1)),e(s,{color:"#75C940"},{default:n(()=>l[6]||(l[6]=[i("连续",-1)])),_:1,__:[6]}),l[8]||(l[8]=i(" 的字符构成的子序列",-1))]),l[11]||(l[11]=a("li",null,"位置：字符在串中的序号；子串的第一个字符在主串中的位置",-1))]),a("h3",b,[e(s,{color:"#DC2D1E"},{default:n(()=>l[12]||(l[12]=[i("基本操作",-1)])),_:1,__:[12]}),l[13]||(l[13]=i()),l[14]||(l[14]=a("a",{class:"header-anchor",href:"#基本操作","aria-label":'Permalink to "<font color=#DC2D1E>基本操作</font>"'},"​",-1))]),l[41]||(l[41]=a("h3",{id:"存储结构",tabindex:"-1"},[i("存储结构 "),a("a",{class:"header-anchor",href:"#存储结构","aria-label":'Permalink to "存储结构"'},"​")],-1)),a("h4",m,[e(s,{color:"#40A8F5"},{default:n(()=>l[15]||(l[15]=[i("定长顺序存储",-1)])),_:1,__:[15]}),l[16]||(l[16]=i()),l[17]||(l[17]=a("a",{class:"header-anchor",href:"#定长顺序存储","aria-label":'Permalink to "<font color=#40A8F5>定长顺序存储</font>"'},"​",-1))]),l[42]||(l[42]=t("",2)),a("ul",null,[a("li",null,[l[20]||(l[20]=t("",5)),a("ul",null,[a("li",null,[l[19]||(l[19]=i("S中定位字串T ",-1)),e(s,{color:"#40A8F5"},{default:n(()=>l[18]||(l[18]=[i("朴素模式匹配",-1)])),_:1,__:[18]})])]),l[21]||(l[21]=t("",1))]),l[22]||(l[22]=a("li",null,"特点",-1))]),a("h4",_,[e(s,{color:"#40A8F5"},{default:n(()=>l[23]||(l[23]=[i("堆分配存储",-1)])),_:1,__:[23]}),l[24]||(l[24]=i()),l[25]||(l[25]=a("a",{class:"header-anchor",href:"#堆分配存储","aria-label":'Permalink to "<font color=#40A8F5>堆分配存储</font>"'},"​",-1))]),l[43]||(l[43]=t("",3)),a("h4",v,[e(s,{color:"#40A8F5"},{default:n(()=>l[26]||(l[26]=[i("块链存储",-1)])),_:1,__:[26]}),l[27]||(l[27]=i()),l[28]||(l[28]=a("a",{class:"header-anchor",href:"#块链存储","aria-label":'Permalink to "<font color=#40A8F5>块链存储</font>"'},"​",-1))]),l[44]||(l[44]=t("",8)),a("h3",g,[e(s,{color:"#DC2D1E"},{default:n(()=>l[29]||(l[29]=[i("模式匹配算法",-1)])),_:1,__:[29]}),l[30]||(l[30]=i()),l[31]||(l[31]=a("a",{class:"header-anchor",href:"#模式匹配算法","aria-label":'Permalink to "<font color=#DC2D1E>模式匹配算法</font>"'},"​",-1))]),l[45]||(l[45]=t("",2)),a("h4",h,[e(s,{color:"#DC2D1E"},{default:n(()=>l[32]||(l[32]=[i("KMP算法",-1)])),_:1,__:[32]}),l[33]||(l[33]=i()),l[34]||(l[34]=a("a",{class:"header-anchor",href:"#kmp算法","aria-label":'Permalink to "<font color=#DC2D1E>KMP算法</font>"'},"​",-1))]),l[46]||(l[46]=t("",1)),a("ul",null,[a("li",null,[e(s,{color:"#DC2D1E"},{default:n(()=>l[35]||(l[35]=[i("next数组",-1)])),_:1,__:[35]})])]),a("h4",T,[e(s,{color:"#DC2D1E"},{default:n(()=>l[36]||(l[36]=[i("KMP算法进一步改进",-1)])),_:1,__:[36]}),l[37]||(l[37]=i()),l[38]||(l[38]=a("a",{class:"header-anchor",href:"#kmp算法进一步改进","aria-label":'Permalink to "<font color=#DC2D1E>KMP算法进一步改进</font>"'},"​",-1))]),l[47]||(l[47]=t("",1)),a("ul",null,[a("li",null,[e(s,{color:"#DC2D1E"},{default:n(()=>l[39]||(l[39]=[i("nextval数组",-1)])),_:1,__:[39]})])])])}const V=r(u,[["render",f]]);export{S as __pageData,V as default};
